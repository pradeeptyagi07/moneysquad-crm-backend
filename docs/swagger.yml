openapi: 3.0.0
info:
  title: Authentication API
  description: API documentation for authentication endpoints
  version: 1.0.0
servers:
  - url: http://localhost:5000/api
    description: Local server

tags:
  - name: Auth
    description: Authentication related APIs

paths:
  /auth/register:
    post:
      summary: Register a new user
      tags: [Auth]
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                  format: email
                phoneNumber:
                  type: string
                gender:
                  type: string
                dob:
                  type: string
                  format: date
                bloodGroup:
                  type: string
                primary_member:
                  type: boolean
                aimym_member:
                  type: boolean
                avatar:
                  type: string
                  format: binary
      responses:
        201:
          description: User registered successfully
        400:
          description: Bad request

  /auth/register-family:
    post:
      summary: Register a family member
      tags: [Auth]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                  format: email
                phoneNumber:
                  type: string
                gender:
                  type: string
                dob:
                  type: string
                  format: date
                bloodGroup:
                  type: string
                avatar:
                  type: string
                  format: binary
      responses:
        201:
          description: Family member registered successfully
        400:
          description: Bad request
        401:
          description: Unauthorized

  /auth/user-data:
    get:
      summary: Get user data
      tags: [Auth]
      security:
        - bearerAuth: []
      responses:
        200:
          description: User data retrieved successfully
        401:
          description: Unauthorized

  /auth/update-user:
    put:
      summary: Update user profile
      tags: [Auth]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                  format: email
                phoneNumber:
                  type: string
                gender:
                  type: string
                dob:
                  type: string
                  format: date
                bloodGroup:
                  type: string
                avatar:
                  type: string
                  format: binary
      responses:
        200:
          description: User updated successfully
        400:
          description: Bad request
        401:
          description: Unauthorized

  /auth/family:
    get:
      summary: Get family members
      tags: [Auth]
      security:
        - bearerAuth: []
      responses:
        200:
          description: Family members retrieved successfully
        401:
          description: Unauthorized

  /auth/family-member/{memberId}:
    delete:
      summary: Delete a family member
      tags: [Auth]
      security:
        - bearerAuth: []
      parameters:
        - name: memberId
          in: path
          required: true
          description: ID of the family member to delete
          schema:
            type: string
      responses:
        200:
          description: Family member deleted successfully
        400:
          description: Bad request
        401:
          description: Unauthorized

  /auth/delete/{phoneNumber}:
    delete:
      summary: Delete a user by phone number
      tags: [Auth]
      parameters:
        - name: phoneNumber
          in: path
          required: true
          description: Phone number of the user to delete
          schema:
            type: string
      responses:
        200:
          description: User deleted successfully
        400:
          description: Bad request

  /auth/delete:
    delete:
      summary: Delete the authenticated user
      tags: [Auth]
      security:
        - bearerAuth: []
      responses:
        200:
          description: User deleted successfully
        401:
          description: Unauthorized
